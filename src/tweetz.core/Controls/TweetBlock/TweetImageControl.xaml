<UserControl
  x:Class="tweetz.core.Controls.TweetImageControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:commands="clr-namespace:tweetz.core.Commands">

  <UserControl.Resources>
    <Style
      x:Key="BorderStyle"
      TargetType="Border">
      <Setter Property="Height" Value="200" />
      <Setter Property="Margin" Value="1" />
      <Setter Property="CornerRadius" Value="8" />
      <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style
      x:Key="UniformGridStyle"
      TargetType="UniformGrid">
      <Style.Triggers>
        <DataTrigger
          Binding="{Binding ItemsSource.Length, ElementName=ItemsControl, Mode=OneWay}"
          Value="2">
          <Setter Property="Rows" Value="1" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </UserControl.Resources>

  <ItemsControl
    Name="ItemsControl"
    ItemsSource="{Binding ExtendedEntities.Media}">
    <ItemsControl.ItemTemplate>
      <DataTemplate>
        <Border
          Name="Border"
          Style="{StaticResource BorderStyle}">
          <Border.Background>
            <!--  All this because I wanted to put round corners on an image and deal with load errors  -->
            <VisualBrush
              AlignmentY="Top"
              Stretch="UniformToFill">
              <VisualBrush.Visual>
                <Grid>
                  <TextBlock
                    Padding="150,100"
                    Background="White"
                    Foreground="Black"
                    Text="Loading..." />
                  <Image
                    RenderOptions.BitmapScalingMode="LowQuality"
                    RenderOptions.CachingHint="Cache"
                    Source="{Binding MediaUrl}">
                    <!--
                      Hooking the ImageFailed event with an instance method throws off all sorts of null
                      reference exceptions during the load. I found using and event trigger works around
                      this issue. Verbose and messy but it gets the job done.
                    -->
                    <Image.Triggers>
                      <EventTrigger RoutedEvent="Image.ImageFailed">
                        <EventTrigger.Actions>
                          <BeginStoryboard>
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="Visibility"
                                Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                  <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                  </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </BeginStoryboard>
                        </EventTrigger.Actions>
                      </EventTrigger>
                    </Image.Triggers>
                  </Image>
                </Grid>
              </VisualBrush.Visual>
            </VisualBrush>
          </Border.Background>

          <Border.InputBindings>
            <MouseBinding
              Command="{x:Static commands:ImageViewerCommand.Command}"
              CommandParameter="{Binding}"
              MouseAction="LeftClick" />
          </Border.InputBindings>
        </Border>
      </DataTemplate>
    </ItemsControl.ItemTemplate>

    <ItemsControl.ItemsPanel>
      <ItemsPanelTemplate>
        <UniformGrid Style="{StaticResource UniformGridStyle}" />
      </ItemsPanelTemplate>
    </ItemsControl.ItemsPanel>
  </ItemsControl>
</UserControl>